import { GraphQLEnumType } from "graphql";
import Typename from "src/types/enums/Typename";

/**
 * IMPORTANT: keep values in sync with the NotificationType DB table.
 */
const NotificationTypeGqlType = new GraphQLEnumType({
  name: Typename.NotificationType,
  values: {
    AirdropCompleted: {},
    AirdropGiftReceived: {},
    BidderAuctionAlmostOver: {},
    BidderAuctionExtended: {},
    BidderAuctionSettled: {},
    BidderClaimPnft: {},
    BidderClaimPnftReminder: {},
    BidderLostAuction: {},
    BidderOutbid: {},
    BidderWonAuction: {},
    BonkClaim: {},
    BuyerOfferAccepted: {},
    BuyerOfferExpired: {},
    CampaignAddedAsTeamMember: {},
    CampaignApproved: {},
    CampaignCommunityNewUpdateShared: {},
    CampaignFollowersCampaignPublished: {},
    CampaignGoalReachedXPercent: {},
    CampaignRejected: {},
    CampaignRejectedWithFeedback: {},
    CollabRequest: {},
    CreatorSecondarySale: {},
    FollowerAuctionAlmostOver: {},
    FollowerNewEditionsListed: {},
    FollowerNewPieceListed: {},
    FollowerNewPieceListedSecondary: {},
    FollowerNewPieceScheduled: {},
    FollowerScheduledAuctionIsLive: {},
    InviteReceived: {},
    InvitesConvertedToCreator: {},
    InvitesInviteeAcceptedInvite: {},
    NewFollower: {},
    OwnerAuctionEnded: {},
    OwnerAuctionEndedNoBids: {},
    OwnerAuctionExtended: {},
    OwnerAuctionSettled: {},
    OwnerEditionSold: {},
    OwnerEditionsSoldOut: {},
    OwnerFirstBidReceived: {},
    OwnerGenerativeMintSoldOut: {},
    OwnerOfferReceived: {},
    OwnerOtherBidReceived: {},
    OwnerPieceSoldAsInstantSale: {},
    PnftDropClosed: {},
    UnlockableDeclinedToSharedInfo: {},
    UnlockableInfoShared: {},
    UnlockableShareInfo: {},
    VotingApproved: {},
    VotingBrokeGuidelines: {},
    VotingDuplicate: {},
    VotingRejected: {},
  },
});

export default NotificationTypeGqlType;
