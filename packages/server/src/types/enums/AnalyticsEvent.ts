/**
 * NOTE: if you add events here, make sure to add to getErrorEventSeverity
 */
enum AnalyticsEvent {
  AcceptCreatorInviteFail = "accept_creator_invite_fail",
  AccountsLowOnFunds = "accounts_low_on_funds",
  AirdropCreated = "airdrop_created",
  AirdropDebug = "airdrop_debug",
  AirdropFail = "airdrop_fail",
  AirdropSuccess = "airdrop_success",
  AntiBotSignerFail = "anti_bot_signer_fail",
  AppendEditionsMerkleAllowlistFail = "append_editions_merkle_allowlist_fail",
  AreNftListingsSyncedError = "are_nft_listings_synced_error",
  AreNftsSyncedDebug = "are_nfts_synced_debug",
  AreNftsSyncedDuration = "are_nfts_synced_duration",
  AreNftsSyncedError = "are_nfts_synced_error",
  AreNftsSyncedInsertedMissingTxs = "are_nfts_synced_inserted_missing_txs",
  BackfillMissingEditionsFail = "backfill_missing_editions_fail",
  BonkError = "bonk_error",
  BotTaxedTransaction = "bot_taxed_transaction",
  BundlrError = "bundlr_error",
  CheckActiveOffersError = "check_active_offers_error",
  CheckRefundableAmountsDuration = "check_refundable_amounts_duration",
  CloseEditionDistributorTokenAccountFail = "close_edition_distributor_token_account_fail",
  CloseEditionDistributorTokenAccountSuccess = "close_edition_distributor_token_account_success",
  ConvertOffPlatformNftFail = "convert_off_platform_nft_fail",
  ConvertOffPlatformNftInvalidMetadata = "convert_off_platform_nft_invalid_metadata",
  CreateLastBidPriceError = "create_last_bid_price_error",
  CreateNotificationsWebhookError = "create_notifications_webhook_error",
  CreateNotificationsWebhookTooLongDelay = "create_notifications_webhook_too_long_delay",
  CreateOnchainAllowlistForEditionsError = "create_onchain_allowlist_for_editions_error",
  CreateOnchainAllowlistForEditionsSuccess = "create_onchain_allowlist_for_editions_success",
  CreatorInvitesIssued = "creator_invites_issued",
  CrossmintError = "crossmint_error",
  CrossmintSuccess = "crossmint_success",
  DatadogDebug = "datadog_debug",
  DatadogError = "datadog_error",
  DatadogInfo = "datadog_info",
  DatadogWarn = "datadog_warn",
  DebugInsertAuctionWonTxs = "debug_insert_auction_won_txs",
  DecodeIxError = "decode_ix_error",
  DeleteNftError = "delete_nft_error",
  DeleteNftSuccess = "delete_nft_success",
  DiscordAuthCallbackError = "discord_auth_callback_error",
  DiscordAuthUserNotConnected = "discord_auth_user_not_connected",
  DiscordAuthUserNotInServerError = "discord_auth_user_not_in_server_error",
  EmailIsNull = "email_is_null",
  ExchangeRateError = "exchange_rate_error",
  ExpressError = "express_error",
  ExtendAuctionsIfLowTpsDetected = "extend_auctions_if_low_tps_detected",
  ExtendAuctionsIfLowTpsError = "extend_auctions_if_low_tps_error",
  ExtendAuctionsIfLowTpsSuccess = "extend_auctions_if_low_tps_success",
  ExtendingBid = "extending_bid",
  FailedTransactionCheckError = "failed_transaction_check_error",
  FeaturedEditionsQueueEmpty = "featured_editions_queue_empty",
  FetchMetadataFail = "fetch_metadata_fail",
  FundingBundlrAccountFail = "funding_bundlr_account_fail",
  FundingBundlrAccountSuccess = "funding_bundlr_account_success",
  GetAllTransferTxs = "get_all_transfer_txs",
  GetAllTransferTxsError = "get_all_transfer_txs_error",
  GetConfirmedSignaturesForAddressLimitExceeded = "get_confirmed_signatures_for_address_limit_exceeded",
  GetLastAuctionInfoError = "get_last_auction_info_error",
  GetMasterEditionUpdateFieldsError = "get_master_edition_update_fields_error",
  GetNftTxRawDeleteFailedTxsSuccess = "get_nft_tx_raw_delete_failed_txs_success",
  GetNftTxRawFailedToFetchTx = "get_nft_tx_raw_failed_to_fetch_tx",
  GetNftTxRawFailedToInsertTx = "get_nft_tx_raw_failed_to_insert_tx",
  GetNftTxRawFailedToParseTx = "get_nft_tx_raw_failed_to_parse_tx",
  GetNftTxRawFoundMissingTransactions = "get_nft_tx_raw_found_missing_transactions",
  GetParsedTransactionError = "get_parsed_transaction_error",
  GetSaleTypeForTxError = "get_sale_type_for_tx_error",
  GraphqlCost = "graphql_cost",
  HasuraPerf = "hasura_perf",
  HasuraWebhookDebug = "hasura_webhook_debug",
  HasuraWebhookError = "hasura_webhook_error",
  HeliusError = "helius_error",
  HiddenGemsQueueEmpty = "hidden_gems_queue_empty",
  ImportNftsError = "import_nfts_error",
  ImportNftsSuccess = "import_nfts_success",
  IncrementCandyMachineTotalAmountMintedError = "increment_candy_machine_total_amount_minted_error",
  InsertHolaplexTxsError = "insert_holaplex_txs_error",
  InsertNftFromSoldGenerativeMintTransactionError = "insert_nft_from_sold_generative_mint_transaction_error",
  InsertNftTransactionCalled = "insert_nft_transaction_called",
  InsertNftTransactionCreatingNft = "insert_nft_transaction_creating_nft",
  InsertNftTransactionDuration = "insert_nft_transaction_duration",
  InsertNftTransactionError = "insert_nft_transaction_error",
  InsertNftTransactionSuccess = "insert_nft_transaction_success",
  InstagramAuthCallbackFail = "instagram_auth_callback_fail",
  InternTransactionCreatedError = "intern_transaction_created_error",
  InternTransactionCreatedExtendTimeSuccess = "intern_transaction_created_extend_time_success",
  InternTransactionCreatedSuccess = "intern_transaction_created_success",
  InvalidRequestPublicKeySignature = "invalid_request_public_key_signature",
  LaunchDarklyError = "launch_darkly_error",
  LogEventLokiError = "log_event_loki_error",
  LoginFirebaseError = "login_firebase_error",
  LoginJwtError = "login_jwt_error",
  MissingTransactionsError = "missing_transactions_error",
  MissingTransactionsInserted = "missing_transactions_inserted",
  MuxDebug = "mux_debug",
  MuxWebhookError = "mux_webhook_error",
  MuxWebhookSuccess = "mux_webhook_success",
  NewVoteWebhookError = "new_vote_webhook_error",
  NftRawTxsDuration = "nft_raw_txs_duration",
  NginxErrors = "nginx_errors",
  NotifyLastDayPnftClaimantsSuccess = "notify_last_day_pnft_claimants_success",
  OutOfSyncError = "out_of_sync_error",
  OutbidYourself = "outbid_yourself",
  OverdueAuctions = "overdue_auctions",
  OverdueAuctionsError = "overdue_auctions_error",
  ParseBuyTxError = "parse_buy_tx_error",
  ParseSolscanTransferTxError = "parse_solscan_transfer_tx_error",
  ParseTxError = "parse_tx_error",
  PendingRefundsError = "pending_refunds_error",
  PnftClaimantLimitReached = "pnft_claimant_limit_reached",
  PrismaPerf = "prisma_perf",
  PrismaPerfExplore = "prisma_perf_explore",
  ProcessExpiredOffersDuration = "process_expired_offers_duration",
  ProcessExpiredOffersError = "process_expired_offers_error",
  ProcessExpiredOffersInfo = "process_expired_offers_info",
  ProcessFinishedAirdropError = "process_finished_airdrop_error",
  ProcessFinishedAuctionsDuration = "process_finished_auctions_duration",
  ProcessFinishedAuctionsError = "process_finished_auctions_error",
  ProcessFinishedAuctionsNoWinningBidder = "process_finished_auctions_no_winning_bidder",
  ProcessFinishedAuctionsProcessNftFinished = "process_finished_auctions_process_nft_finished",
  ProcessFinishedAuctionsSendEmailFail = "process_finished_auctions_send_email_fail",
  ProcessFinishedAuctionsSendEmailSuccess = "process_finished_auctions_send_email_success",
  ProcessFinishedPnftDropsFail = "process_finished_pnft_drops_fail",
  ProcessFinishedPnftDropsFinish = "process_finished_pnft_drops_finish",
  RefreshNftInsertTransaction = "refresh_nft_insert_transaction",
  RefreshNftInsertUnexpectedTransaction = "refresh_nft_insert_unexpected_transaction",
  RefreshNftUnexpectedError = "refresh_nft_unexpected_error",
  RefreshNftUpdateFailed = "refresh_nft_update_failed",
  RefreshNftUpdated = "refresh_nft_updated",
  RequestReceived = "request_received",
  ResolverError = "resolver_error",
  ResolverError500 = "resolver_error_500",
  RpcRetryDuration = "rpc_retry_duration",
  RpcRetryError = "rpc_retry_error",
  RpcRetryFatal = "rpc_retry_fatal",
  RpcRetryResult = "rpc_retry_result",
  RpcRetryWarning = "rpc_retry_warning",
  RpcTimeout = "rpc_timeout",
  SendCreatorInviteFail = "send_creator_invite_fail",
  SendDiscordNotificationFail = "send_discord_notification_fail",
  SendEmailFail = "send_email_fail",
  SendEmailFilteredRecipients = "send_email_filtered_recipients",
  SendEmailSuccess = "send_email_success",
  SendSlackNotificationFail = "send_slack_notification_fail",
  SetPreviousBiddersResult = "set_previous_bidders_result",
  SolanaBlockTimeError = "solana_block_time_error",
  SyncAuctionTxsDuration = "sync_auction_txs_duration",
  SyncNftMetadataDebug = "sync_nft_metadata_debug",
  SyncNftMetadataError = "sync_nft_metadata_error",
  SyncTransferTxsDebug = "sync_transfer_txs_debug",
  SyncTransferTxsDuration = "sync_transfer_txs_duration",
  // For testing
  Test = "test",
  TransactionTokenDelegateWarning = "transaction_token_delegate_warning",
  TwitterAuthCallbackFail = "twitter_auth_callback_fail",
  UnexpectedInput = "unexpected_input",
  UpdateCampaignFundingTierNftsError = "update_campaign_funding_tier_nfts_error",
  UpdatePnftDropFail = "update_pnft_drop_fail",
  UpdatePnftDropSuccess = "update_pnft_drop_success",
  UpdateScheduledAuctionsSuccess = "update_scheduled_auctions_success",
  UpdateUnlockableWinnerFail = "update_unlockable_winner_fail",
  UpdateUnlockableWinnerSuccess = "update_unlockable_winner_success",
  UploadAssetToArweaveFail = "upload_asset_to_arweave_fail",
  UploadAssetToArweaveSuccess = "upload_asset_to_arweave_success",
  UploadImportedAssetError = "upload_imported_asset_error",
  UploadImportedAssetSuccess = "upload_imported_asset_success",
  UploadMp4GifPreviewSuccess = "upload_mp4_gif_preview_success",
  UploadMp4ThumbnailFail = "upload_mp4_thumbnail_fail",
  UploadMp4ThumbnailSuccess = "upload_mp4_thumbnail_success",
  UploadNftMetadataToArweaveFail = "upload_nft_metadata_to_arweave_fail",
  UploadNftMetadataToArweaveSuccess = "upload_nft_metadata_to_arweave_success",
  UploadNftToArweaveFail = "upload_nft_to_arweave_fail",
  UploadNftToArweaveSuccess = "upload_nft_to_arweave_success",
  UploadSeriesToArweaveFail = "upload_series_to_arweave_fail",
  UploadToMuxWebhookError = "upload_to_mux_webhook_error",
  ValidateNftBidError = "validate_nft_bid_error",
  VerificationError = "verification_error",
  VerificationMissingSignature = "verification_missing_signature",
  ViewerIdMismatch = "viewer_id_mismatch",
}

export default AnalyticsEvent;
